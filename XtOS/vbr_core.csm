[BITS 16]
[CPU 8086]
%include "ext/stdconio_h.csm"

Start:
	push cs | pop ds
	
	mov [drive], dl
	Print(."Welcome to XtOS!")
	
	
	
	cli | hlt

printStr:
	push ax
	push bx	
	
	.char:
		lodsb
		test al, al
		jz .end
		
		mov ah, 0Eh ; Print character
		xor bh, bh  ; Page 0
		int 10h
	jmp .char
		
	.end:
	pop bx
	pop ax
ret

printHexNumber:
	push ax
	push cx
	push dx
	
	mov cx, 16
	call .printNumber
	
	pop dx
	pop cx
	pop ax
ret
	
	.printNumber:
		push ax
		push dx
		
		xor dx, dx
		div cx            ; AX = Quotient, DX = Remainder
		test ax, ax       ; Is quotient zero?
		
		jz .printDigit    ; Yes, just print the digit in the remainder.
		call .printNumber ; No, recurse and divide the quotient by 16 again. Then print the digit in the remainder.
		
		.printDigit:
		mov al, dl
		add al, '0'
		cmp al, '9'
		jle .putc
		
		add al, 7
		
		.putc:
		call putch
	
		pop dx
		pop ax
    ret
	
putch: 
	push ax
	push bx
	
	cmp al, NL ; Is character newline?
	jne .print
	
	mov al, CR ; Print a carriage return
	call putch
	mov al, NL ; Then print an actual new line
	
	.print:
	mov ah, 0Eh
	xor bh, bh
	mov bl, 1Ah
	int 10h
	
	pop bx
	pop ax
ret	

#include ext/drive/query_drive_chs.csm
#include ext/drive/query_drive_lba.csm

Constants:

; --------- Variable space ---------
#include ext/drive/daps.csm
#include ext/drive/drive_properties.csm

times (1024+512)-($-$$) db 0x90 ; Round to 1kb.
